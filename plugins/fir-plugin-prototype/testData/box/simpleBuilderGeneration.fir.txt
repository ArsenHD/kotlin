FILE: simpleBuilderGeneration.kt
    @R|org/jetbrains/kotlin/fir/plugin/WithBuilder|() public final data class MyClass : R|kotlin/Any| {
        public constructor(number: R|kotlin/Int|, text: R|kotlin/String|, flag: R|kotlin/Boolean|): R|MyClass| {
            super<R|kotlin/Any|>()
        }

        public final val number: R|kotlin/Int| = R|<local>/number|
            public get(): R|kotlin/Int|

        public final val text: R|kotlin/String| = R|<local>/text|
            public get(): R|kotlin/String|

        public final val flag: R|kotlin/Boolean| = R|<local>/flag|
            public get(): R|kotlin/Boolean|

        public final operator fun component1(): R|kotlin/Int|

        public final operator fun component2(): R|kotlin/String|

        public final operator fun component3(): R|kotlin/Boolean|

        public final fun copy(number: R|kotlin/Int| = this@R|/MyClass|.R|/MyClass.number|, text: R|kotlin/String| = this@R|/MyClass|.R|/MyClass.text|, flag: R|kotlin/Boolean| = this@R|/MyClass|.R|/MyClass.flag|): R|MyClass|

        public final companion object Companion : R|kotlin/Any| {
            public final inline fun build(block: R|MyClass.Builder.() -> kotlin/Unit|): R|MyClass| {
                ^build R|/MyClass.Builder|().R|kotlin/apply|(R|<local>/block|).R|/MyClass.Builder.build|()
            }

            private constructor(): R|MyClass.Companion| {
                super<R|kotlin/Any|>()
            }

        }

        public final class Builder : R|kotlin/Any| {
            public final fun build(): R|MyClass| {
                ^build R|/MyClass.MyClass|(this@R|/MyClass.Builder|.R|<local>/number|, this@R|/MyClass.Builder|.R|<local>/text|, this@R|/MyClass.Builder|.R|<local>/flag|)
            }

            public final var number: R|kotlin/Int|
                public get(): R|kotlin/Int|
                public set(value: R|kotlin/Int|): R|kotlin/Unit|

            public final lateinit var text: R|kotlin/String|
                public get(): R|kotlin/String|
                public set(value: R|kotlin/String|): R|kotlin/Unit|

            public final var flag: R|kotlin/Boolean|
                public get(): R|kotlin/Boolean|
                public set(value: R|kotlin/Boolean|): R|kotlin/Unit|

            private constructor(): R|MyClass.Builder| {
                super<R|kotlin/Any|>()
            }

        }

    }
    public final fun box(): R|kotlin/String| {
        lval value: R|MyClass| = Q|MyClass|.R|/MyClass.Companion.build|(<L> = build@fun R|MyClass.Builder|.<anonymous>(): R|kotlin/Unit| <inline=Inline, kind=UNKNOWN>  {
            this@R|special/anonymous|.R|<local>/number| = Int(42)
            this@R|special/anonymous|.R|<local>/text| = String(text)
            this@R|special/anonymous|.R|<local>/flag| = Boolean(true)
        }
        )
        ^box when () {
            ==(R|<local>/value|.R|/MyClass.number|, Int(42)) && ==(R|<local>/value|.R|/MyClass.text|, String(text)) && R|<local>/value|.R|/MyClass.flag| ->  {
                String(OK)
            }
            else ->  {
                String(Error)
            }
        }

    }
