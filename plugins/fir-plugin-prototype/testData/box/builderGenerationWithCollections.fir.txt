FILE: builderGenerationWithCollections.kt
    @R|org/jetbrains/kotlin/fir/plugin/WithBuilder|() public final data class MyClass : R|kotlin/Any| {
        public constructor(number: R|kotlin/Int|, list: R|kotlin/collections/List<kotlin/Int>|, set: R|kotlin/collections/Set<kotlin/String>|, map: R|kotlin/collections/Map<kotlin/Int, kotlin/String>|): R|MyClass| {
            super<R|kotlin/Any|>()
        }

        public final val number: R|kotlin/Int| = R|<local>/number|
            public get(): R|kotlin/Int|

        public final val list: R|kotlin/collections/List<kotlin/Int>| = R|<local>/list|
            public get(): R|kotlin/collections/List<kotlin/Int>|

        public final val set: R|kotlin/collections/Set<kotlin/String>| = R|<local>/set|
            public get(): R|kotlin/collections/Set<kotlin/String>|

        public final val map: R|kotlin/collections/Map<kotlin/Int, kotlin/String>| = R|<local>/map|
            public get(): R|kotlin/collections/Map<kotlin/Int, kotlin/String>|

        public final operator fun component1(): R|kotlin/Int|

        public final operator fun component2(): R|kotlin/collections/List<kotlin/Int>|

        public final operator fun component3(): R|kotlin/collections/Set<kotlin/String>|

        public final operator fun component4(): R|kotlin/collections/Map<kotlin/Int, kotlin/String>|

        public final fun copy(number: R|kotlin/Int| = this@R|/MyClass|.R|/MyClass.number|, list: R|kotlin/collections/List<kotlin/Int>| = this@R|/MyClass|.R|/MyClass.list|, set: R|kotlin/collections/Set<kotlin/String>| = this@R|/MyClass|.R|/MyClass.set|, map: R|kotlin/collections/Map<kotlin/Int, kotlin/String>| = this@R|/MyClass|.R|/MyClass.map|): R|MyClass|

        public final companion object Companion : R|kotlin/Any| {
            public final inline fun build(block: R|MyClass.Builder.() -> kotlin/Unit|): R|MyClass| {
                ^build R|/MyClass.Builder|().R|kotlin/apply|(R|<local>/block|).R|/MyClass.Builder.build|()
            }

            private constructor(): R|MyClass.Companion| {
                super<R|kotlin/Any|>()
            }

        }

        public final class Builder : R|kotlin/Any| {
            public final fun build(): R|MyClass| {
                ^build R|/MyClass.MyClass|(this@R|/MyClass.Builder|.R|<local>/number|, this@R|/MyClass.Builder|.R|<local>/list|, this@R|/MyClass.Builder|.R|<local>/set|, this@R|/MyClass.Builder|.R|<local>/map|)
            }

            public final var number: R|kotlin/Int|
                public get(): R|kotlin/Int|
                public set(value: R|kotlin/Int|): R|kotlin/Unit|

            public final val list: R|kotlin/collections/MutableList<kotlin/Int>| = R|kotlin/collections/mutableListOf|()
                public get(): R|kotlin/collections/MutableList<kotlin/Int>|

            public final val set: R|kotlin/collections/MutableSet<kotlin/String>| = R|kotlin/collections/mutableSetOf|()
                public get(): R|kotlin/collections/MutableSet<kotlin/String>|

            public final val map: R|kotlin/collections/MutableMap<kotlin/Int, kotlin/String>| = R|kotlin/collections/mutableMapOf|()
                public get(): R|kotlin/collections/MutableMap<kotlin/Int, kotlin/String>|

            private constructor(): R|MyClass.Builder| {
                super<R|kotlin/Any|>()
            }

        }

    }
    public final fun box(): R|kotlin/String| {
        lval value: R|MyClass| = Q|MyClass|.R|/MyClass.Companion.build|(<L> = build@fun R|MyClass.Builder|.<anonymous>(): R|kotlin/Unit| <inline=Inline, kind=UNKNOWN>  {
            this@R|special/anonymous|.R|<local>/number| = Int(42)
            this@R|special/anonymous|.R|<local>/list|.R|kotlin/collections/plusAssign|<R|kotlin/Int|>(Int(1))
            this@R|special/anonymous|.R|<local>/list|.R|kotlin/collections/plusAssign|<R|kotlin/Int|>(R|kotlin/collections/listOf|<R|kotlin/Int|>(vararg(Int(2), Int(3))))
            this@R|special/anonymous|.R|<local>/set|.R|kotlin/collections/plusAssign|<R|kotlin/String|>(R|kotlin/collections/setOf|<R|kotlin/String|>(vararg(String(some), String(text))))
            this@R|special/anonymous|.R|<local>/map|.R|kotlin/collections/set|<R|kotlin/Int|, R|kotlin/String|>(Int(1), String(one))
            this@R|special/anonymous|.R|<local>/map|.R|kotlin/collections/set|<R|kotlin/Int|, R|kotlin/String|>(Int(2), String(two))
            this@R|special/anonymous|.R|<local>/map|.R|kotlin/collections/set|<R|kotlin/Int|, R|kotlin/String|>(Int(3), String(three))
        }
        )
        when () {
            !=(R|<local>/value|.R|/MyClass.number|, Int(42)) ->  {
                ^box String(Error)
            }
        }

        when () {
            !=(R|<local>/value|.R|/MyClass.list|, R|kotlin/collections/listOf|<R|kotlin/Int|>(vararg(Int(1), Int(2), Int(3)))) ->  {
                ^box String(Error)
            }
        }

        when () {
            !=(R|<local>/value|.R|/MyClass.set|, R|kotlin/collections/setOf|<R|kotlin/String|>(vararg(String(some), String(text)))) ->  {
                ^box String(Error)
            }
        }

        when () {
            !=(R|<local>/value|.R|/MyClass.map|, R|kotlin/collections/mapOf|<R|kotlin/Int|, R|kotlin/String|>(vararg(Int(1).R|kotlin/to|<R|kotlin/Int|, R|kotlin/String|>(String(one)), Int(2).R|kotlin/to|<R|kotlin/Int|, R|kotlin/String|>(String(two)), Int(3).R|kotlin/to|<R|kotlin/Int|, R|kotlin/String|>(String(three))))) ->  {
                ^box String(Error)
            }
        }

        ^box String(OK)
    }
